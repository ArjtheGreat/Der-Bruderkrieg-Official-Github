ITA_calc_civil_war_vars = {
    
} 

ITA_level_up_conscription_law = {
	if = {
		limit = {
			has_idea = civilian_economy
		}
		add_idea = early_mobilization
	}
	if = {
		limit = {
			has_idea = early_mobilization
		}
		add_idea = partial_mobilization
	}
	if = {
		limit = {
			has_idea = partial_mobilization
		}
		add_idea = war_economy
	}
}

ITA_level_down_recovery = {
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_2
			remove_idea = ITA_legacy_of_the_civil_war
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_2
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_3
			remove_idea = ITA_legacy_of_the_civil_war_2
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_3
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_4
			remove_idea = ITA_legacy_of_the_civil_war_3
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_4
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_5
			remove_idea = ITA_legacy_of_the_civil_war_4
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_5
		}

		remove_ideas = ITA_legacy_of_the_civil_war_5
	}
}

ITA_calc_economic_recovery = {
	
	set_variable = {ITA_economic_civil_war_loc_showcase = ITA_economic_civil_war_var}
	add_to_variable = {ITA_economic_civil_war_loc_showcase = 100}

	set_variable = {ITA_economic_civil_war_buildings_var = ITA_economic_civil_war_var}
	divide_variable = {ITA_economic_civil_war_buildings_var = 2500}

	set_variable = {ITA_economic_civil_war_factory_var = ITA_economic_civil_war_var}
	divide_variable = {ITA_economic_civil_war_factory_var = 4000}
}

ITA_civil_war_fire_effect = {
	ITA = {
		every_owned_state = {
			limit = {
				any_neighbor_state = {
					is_owned_by = CMI 
				}
			}
			add_to_array = {
				array = ITA_place_army_states
				value = THIS
			}
		}
	}
	teleport_armies = {
		limit = {
			tag = ITA
		}
		to_state_array = ITA_place_army_states
	}

	ITA = {
		remove_ideas = ITA_socialist_revolt


	}

	

	hidden_effect = {
		if = { 
			limit = { 
				158 = {check_variable = {socialist_influence > fascist_influence }} 
			}
			158 = {
				add_core_of = CMI
			} 
		}
		if = { 
			limit = { 
				159 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			159 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				161 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			161 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				162 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			162 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				892 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			892 = {
				add_core_of = CMI
			} 
		}
		if = { 
			limit = { 
				891 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			891 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				157 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			157 = {
				add_core_of = CMI
			} 
			888 = {
				add_core_of = CMI
			} 
		}
		random_list = {
			50 = {
				CMI = {
					set_politics = {
						ruling_party = communism
					}
				}
			}
			50 = {
				CMI = {
					set_politics = {
						ruling_party = socialism_democratic
					}
				}
			}
		}

		release = CMI


		CMI = {
			load_oob = "CMI_civil_war"
		}
		

		for_each_scope_loop = {
			array = ITA.socialist_GUI_array_target_states
			
			
			log = "Array runs"
			if = {
				limit = {
					is_core_of = CMI
				}
				log = "Core Check runs"
        log = "[?num_of_militas_divisions] VARIABLE"
				for_loop_effect = {
					start = 1
					end = num_of_militas_divisions
					add = 1
					
					log = "[?v] Created"
					create_unit = {
						division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

						owner = CMI
					}
				}
			}
			
	
		}
			
		  
		
	
	
		
		
		declare_war_on = {
			target = CMI
			type = civil_war
		}
		ITA_give_italian_cores = yes
	}
}

ITA_give_italian_cores = {
	CMI = {
		every_owned_state = {
		add_core_of = ITA
		}
	}
} 


ITA_named_vars_NFP_graph_set_up = {
	set_variable = { ITA_mussolini_influence_in_NFP = 0.7  }
	set_variable = { ITA_evola_influence_in_NFP = 0.4  }
	set_variable = { ITA_conservative_influence_in_NFP = 0.3  }
	set_variable = { ITA_futurist_influence_in_NFP = 0.2  }
	set_variable = { ITA_mvsn_influence_in_NFP = 0.15  }

	ITA_NFP_radar_graph_set_up = yes
	ITA_NFP_convert_axes_values_to_frames = yes
}

ITA_NFP_radar_graph_set_up = {
	# Sets up random values from 4-9 for each of the axes on the radar graph

	set_variable = { ITA_MVSN_radar_0 = ITA_mussolini_influence_in_NFP  } ###Mussolini
	multiply_variable = { ITA_MVSN_radar_0 = 5 }
	add_to_variable = { ITA_MVSN_radar_0 = 4 }
	subtract_from_variable = { ITA_MVSN_radar_0 = 0.5 }
	round_variable = ITA_MVSN_radar_0

	set_variable = { ITA_MVSN_radar_1 = ITA_evola_influence_in_NFP  } ###Evola
	multiply_variable = { ITA_MVSN_radar_1 = 5 }
	add_to_variable = { ITA_MVSN_radar_1 = 4 }
	subtract_from_variable = { ITA_MVSN_radar_1 = 0.5 }
	round_variable = ITA_MVSN_radar_1

	set_variable = { ITA_MVSN_radar_2 = ITA_conservative_influence_in_NFP } ###Conservatives
	multiply_variable = { ITA_MVSN_radar_2 = 5 }
	add_to_variable = { ITA_MVSN_radar_2 = 4 }
	subtract_from_variable = { ITA_MVSN_radar_2 = 0.5 }
	round_variable = ITA_MVSN_radar_2

	set_variable = { ITA_MVSN_radar_3 = ITA_futurist_influence_in_NFP  } ###Futurists
	multiply_variable = { ITA_MVSN_radar_3 = 5 }
	add_to_variable = { ITA_MVSN_radar_3 = 4 }
	subtract_from_variable = { ITA_MVSN_radar_3 = 0.5 }
	round_variable = ITA_MVSN_radar_3

	set_variable = { ITA_MVSN_radar_4 = ITA_mvsn_influence_in_NFP  } ##MVSN
	multiply_variable = { ITA_MVSN_radar_4 = 5 }
	add_to_variable = { ITA_MVSN_radar_4 = 4 }
	subtract_from_variable = { ITA_MVSN_radar_4 = 0.5 }
	round_variable = ITA_MVSN_radar_4
}



ITA_NFP_convert_axes_values_to_frames = {
	# Computes the frame values for each of the radar graph progress bars, based on these inputs

	set_variable = { ITA_MVSN_radar_display_0 = ITA_MVSN_radar_0 }
	multiply_variable = { ITA_MVSN_radar_display_0 = 10 }
	add_to_variable = { ITA_MVSN_radar_display_0 = ITA_MVSN_radar_1 }

	set_variable = { ITA_MVSN_radar_display_1 = ITA_MVSN_radar_1  }
	multiply_variable = { ITA_MVSN_radar_display_1 = 10 }
	add_to_variable = { ITA_MVSN_radar_display_1 = ITA_MVSN_radar_2 }

	set_variable = { ITA_MVSN_radar_display_2 = ITA_MVSN_radar_2 }
	multiply_variable = { ITA_MVSN_radar_display_2 = 10 }
	add_to_variable = { ITA_MVSN_radar_display_2 = ITA_MVSN_radar_3 }

	set_variable = { ITA_MVSN_radar_display_3 = ITA_MVSN_radar_3 }
	multiply_variable = { ITA_MVSN_radar_display_3 = 10 }
	add_to_variable = { ITA_MVSN_radar_display_3 = ITA_MVSN_radar_4 }

	set_variable = { ITA_MVSN_radar_display_4 = ITA_MVSN_radar_4 }
	multiply_variable = { ITA_MVSN_radar_display_4 = 10 }
	add_to_variable = { ITA_MVSN_radar_display_4 = ITA_MVSN_radar_0 }

	ITA_calc_party_stability_var = yes
}

ITA_calc_party_stability_var = { #average
	set_variable = { ITA_NFP_party_stability = 0 }

	add_to_variable = {
		ITA_NFP_party_stability = ITA_MVSN_radar_display_0
	}
	add_to_variable = {
		ITA_NFP_party_stability = ITA_MVSN_radar_display_1
	}
	add_to_variable = {
		ITA_NFP_party_stability = ITA_MVSN_radar_display_2
	}
	add_to_variable = {
		ITA_NFP_party_stability = ITA_MVSN_radar_display_3
	}
	add_to_variable = {
		ITA_NFP_party_stability = ITA_MVSN_radar_display_4
	}

	divide_variable = {
		ITA_NFP_party_stability = 5
	}
}


ITA_socialist_militia_population_setup = {
	for_each_scope_loop = {
		array = ITA.socialist_GUI_array_target_states
		
		set_variable = { num_of_militas_divisions = THIS.state_population_k }

		multiply_variable = {num_of_militas_divisions = socialist_influence}

		divide_variable = {num_of_militas_divisions = 50000}

		round_variable = num_of_militas_divisions


	}
}

