ITA_reforms_decision_effect = {

	## Bianchi
	if = {
		limit = {
			has_country_flag = ITA_chose_bianchi
		}
		add_ideas = ITA_fascist_trade_unions_3
		add_country_leader_trait = ovra
		swap_ideas = {
			add_idea = Vendetta_Nazionale_2
			remove_idea = Vendetta_Nazionale
		}
	}

	## Ciano
	if = {
		limit = {
			has_country_flag = ITA_chose_ciano
		}
		add_ideas = ITA_fascist_trade_unions_3
		add_country_leader_trait = ovra
		add_country_leader_trait = descendants_of_rome

		PAP = {
			country_event = ITA_fascist_tree_events.2
		}
		swap_ideas = {
			add_idea = Vendetta_Nazionale_2
			remove_idea = Vendetta_Nazionale
		}
	}

	## Evola
	if = {
		limit = {
			has_country_flag = ITA_chose_evola
		}
		add_ideas = ITA_carlomonic_state_2
		add_ideas = ITA_italianisation
		add_ideas = ITA_three_ideals
		add_ideas = ITA_uri_group

		random_list = {
			50 = {
				add_ideas = ITA_blueshirt_alliance
			}
			50 = {
				add_ideas = ITA_for_the_king_for_the_country
			}
		}

		unlock_decision_category_tooltip = ITA_evola_neo_feudalist_reforms
		set_country_flag = ITA_evola_neo_feudalist_reforms_unlock
	}

	## Terruzzi
	if = {
		limit = {
			has_country_flag = ITA_chose_terruzi
		}
		add_country_leader_trait =  italian_militarism
		add_ideas = ITA_blackshirt_run_government_2
		add_resource = {
			type = steel
			amount = 4
			state = 117
		}
		add_resource = {
			type = steel
			amount = 4
			state = 882
		}
		add_resource = {
			type = steel
			amount = 4
			state = 886
		}
		add_resource = {
			type = steel
			amount = 4
			state = 880
		}
		random_owned_controlled_state = {
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			add_extra_state_shared_building_slots = 1
		}
		random_owned_controlled_state = {
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			add_extra_state_shared_building_slots = 1
		}
		random_owned_controlled_state = {
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			add_extra_state_shared_building_slots = 1
		}
		add_ideas = ITA_fascist_architects_2
	}
	

	## ALL 4 Candidates
	AUS = {
		add_opinion_modifier = {
			target = ITA
			modifier = mortal_enemies
		}
	}
	ITA = {
		add_opinion_modifier = {
			target = AUS
			modifier = mortal_enemies
		}
	}
	remove_ideas = ITA_socialist_revolt
	remove_ideas = ITA_mass_economic_instability
}

ITA_calc_civil_war_vars = {
    
} 

ITA_level_up_conscription_law = {
	if = {
		limit = {
			has_idea = disarmed_nation
		}
		add_ideas = volunteer_only 
	}
	if = {
		limit = {
			has_idea = volunteer_only 
		}
		add_ideas = limited_conscription
	}
	if = {
		limit = {
			has_idea = limited_conscription
		}
		add_ideas = extensive_conscription
	}
	if = {
		limit = {
			has_idea = limited_conscription
		}
		add_ideas = extensive_conscription
	}
	if = {
		limit = {
			has_idea = extensive_conscription
		}
		add_ideas = service_by_requirement
	}
	if = {
		limit = {
			has_idea = service_by_requirement
		}
		add_ideas = all_adults_serve
	}
	if = {
		limit = {
			has_idea = all_adults_serve
		}
		add_ideas = scraping_the_barrel
	}
}

ITA_level_down_recovery = {
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_2
			remove_idea = ITA_legacy_of_the_civil_war
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_2
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_3
			remove_idea = ITA_legacy_of_the_civil_war_2
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_3
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_4
			remove_idea = ITA_legacy_of_the_civil_war_3
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_4
		}

		swap_ideas = {
			add_idea = ITA_legacy_of_the_civil_war_5
			remove_idea = ITA_legacy_of_the_civil_war_4
		}
	}
	if = {
		limit = {
			has_idea = ITA_legacy_of_the_civil_war_5
		}

		remove_ideas = ITA_legacy_of_the_civil_war_5
	}
}

ITA_calc_economic_recovery = {
	
	set_variable = {ITA_economic_civil_war_loc_showcase = ITA_economic_civil_war_var}
	add_to_variable = {ITA_economic_civil_war_loc_showcase = 100}

	set_variable = {ITA_economic_civil_war_buildings_var = ITA_economic_civil_war_var}
	divide_variable = {ITA_economic_civil_war_buildings_var = 2500}

	set_variable = {ITA_economic_civil_war_factory_var = ITA_economic_civil_war_var}
	divide_variable = {ITA_economic_civil_war_factory_var = 4000}
}

ITA_civil_war_fire_effect = {
	leave_faction = yes
	ITA = {
		every_owned_state = {
			limit = {
				any_neighbor_state = {
					is_owned_by = CMI 
				}
			}
			add_to_array = {
				array = ITA_place_army_states
				value = THIS
			}
		}
	}
	teleport_armies = {
		limit = {
			tag = ITA
		}
		to_state_array = ITA_place_army_states
	}

	ITA = {
		remove_ideas = ITA_socialist_revolt


	}

	

	hidden_effect = {
		if = { 
			limit = { 
				158 = {check_variable = {socialist_influence > fascist_influence }} 
			}
			158 = {
				add_core_of = CMI
			} 
		}
		if = { 
			limit = { 
				159 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			159 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				161 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			161 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				162 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			162 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				892 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			892 = {
				add_core_of = CMI
			} 
		}
		if = { 
			limit = { 
				891 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			891 = {
				add_core_of = CMI
			} 
		}

		if = { 
			limit = { 
				157 = {check_variable = {socialist_influence > fascist_influence}} 
			}
			157 = {
				add_core_of = CMI
			} 
			888 = {
				add_core_of = CMI
			} 
		}
		# random_list = {
		# 	50 = {
		# 		CMI = {
		# 			set_politics = {
		# 				ruling_party = communism
		# 			}
		# 		}
		# 	}
		# 	50 = {
		# 		CMI = {
		# 			set_politics = {
		# 				ruling_party = socialism_democratic
		# 			}
		# 		}
		# 	}
		# }

		release = CMI


		CMI = {
			load_oob = "CMI_civil_war"
		}
		

		for_each_scope_loop = {
			array = ITA.socialist_GUI_array_target_states
			
			
			#log = "Array runs"
			if = {
				limit = {
					is_core_of = CMI
				}
			#	log = "Core Check runs"
     #   log = "[?num_of_militas_divisions] VARIABLE"
				for_loop_effect = {
					start = 1
					end = num_of_militas_divisions
					add = 1
					
					#log = "[?v] Created"
					create_unit = {
						division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

						owner = CMI
					}
				}
			}
			
	
		}
			
		  
		
	
	
		
		
		declare_war_on = {
			target = CMI
			type = civil_war
		}
		ITA_give_italian_cores = yes
	}
}

ITA_minor_hardliner_revolt = {
	leave_faction = yes
	CMI = {
		set_cosmetic_tag = CMI_hardliner_revolt
		add_state_core = 886
		add_state_core = 882
		add_state_core = 156
		add_state_core = 880
		add_state_core = 115
		set_politics = {
			ruling_party = ultranationalism
		}
	}
	ITA = {
		release = CMI
	}
	CMI = {
		load_oob = "CMI_civil_war"
		declare_war_on = {
			target = ITA
			type = civil_war
		}

		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

				owner = CMI
			}
			create_unit = {
				division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

				owner = CMI
			}
			create_unit = {
				division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

				owner = CMI
			}
			create_unit = {
				division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

				owner = CMI
			}
			create_unit = {
				division = "name = \"People's Army of Italy\" division_template = \"Divisione di Fanteria\" start_experience_factor = 0.5 start_equipment_factor = 1"

				owner = CMI
			}
		}
	}
}

ITA_give_italian_cores = {
	CMI = {
		every_owned_state = {
		add_core_of = ITA
		}
	}
} 

ITA_gerarchi_elections_timeout_effect = {
	if = {
		limit = {
				has_country_flag = ITA_evolas_coup_first_part_done
				has_country_flag = ITA_the_mvsn_is_on_evolas_side
		}
		country_event = ITA_evola_coup_events.3 
	}
	else = {
		set_country_flag = ITA_evolas_coup_destoryed
	}
}


ITA_named_vars_NFP_graph_set_up = {
	set_variable = { ITA_mussolini_influence_in_NFP = 0.7  }
	set_variable = { ITA_evola_influence_in_NFP = 0.4  }
	set_variable = { ITA_conservative_influence_in_NFP = 0.3  }
	set_variable = { ITA_futurist_influence_in_NFP = 0.2  }
	set_variable = { ITA_mvsn_influence_in_NFP = 0.15  }

	ITA_calc_party_stability_var = yes
}



ITA_calc_party_stability_var = { #average

	set_variable = {
		ITA_NFP_party_stability_political_power_gain = ITA_NFP_party_stability
	}
	divide_variable = {
		ITA_NFP_party_stability_political_power_gain = -300
	}
	set_variable = {
		ITA_NFP_party_stability_political_power_gain_loc = ITA_NFP_party_stability_political_power_gain
	}
	multiply_variable = {
		ITA_NFP_party_stability_political_power_gain_loc = 100
	}
	
}

ITA_decrease_party_stability_small = {
	add_to_variable = {
		tooltip = ITA_NFP_party_stability_decrease_small_tt
		ITA_NFP_party_stability = -2
	}
	ITA_calc_party_stability_var = yes
}
ITA_decrease_party_stability_medium = {
	add_to_variable = {
		tooltip = ITA_NFP_party_stability_decrease_medium_tt
		ITA_NFP_party_stability = -4
	}
	ITA_calc_party_stability_var = yes
}
ITA_decrease_party_stability_large = {
	add_to_variable = {
		tooltip = ITA_NFP_party_stability_decrease_large_tt
		ITA_NFP_party_stability = -6
	}
	ITA_calc_party_stability_var = yes
}


ITA_increase_party_stability_small = {
	add_to_variable = {
		tooltip = ITA_NFP_party_stability_increase_small_tt
		ITA_NFP_party_stability = 2
	}
	ITA_calc_party_stability_var = yes
}
ITA_increase_party_stability_medium = {
	add_to_variable = {
		tooltip = ITA_NFP_party_stability_increase_medium_tt
		ITA_NFP_party_stability = 4
	}
	ITA_calc_party_stability_var = yes
}
ITA_increase_party_stability_large = {
	add_to_variable = {
		tooltip = ITA_NFP_party_stability_increase_large_tt
		ITA_NFP_party_stability = 6
	}
	ITA_calc_party_stability_var = yes
}

# ITA_NFP_radar_graph_set_up = {
# 	# Sets up random values from 4-9 for each of the axes on the radar graph

# 	set_variable = { ITA_MVSN_radar_0 = ITA_mussolini_influence_in_NFP  } ###Mussolini
# 	multiply_variable = { ITA_MVSN_radar_0 = 5 }
# 	add_to_variable = { ITA_MVSN_radar_0 = 4 }
# 	subtract_from_variable = { ITA_MVSN_radar_0 = 0.5 }
# 	round_variable = ITA_MVSN_radar_0

# 	set_variable = { ITA_MVSN_radar_1 = ITA_evola_influence_in_NFP  } ###Evola
# 	multiply_variable = { ITA_MVSN_radar_1 = 5 }
# 	add_to_variable = { ITA_MVSN_radar_1 = 4 }
# 	subtract_from_variable = { ITA_MVSN_radar_1 = 0.5 }
# 	round_variable = ITA_MVSN_radar_1

# 	set_variable = { ITA_MVSN_radar_2 = ITA_conservative_influence_in_NFP } ###Conservatives
# 	multiply_variable = { ITA_MVSN_radar_2 = 5 }
# 	add_to_variable = { ITA_MVSN_radar_2 = 4 }
# 	subtract_from_variable = { ITA_MVSN_radar_2 = 0.5 }
# 	round_variable = ITA_MVSN_radar_2

# 	set_variable = { ITA_MVSN_radar_3 = ITA_futurist_influence_in_NFP  } ###Futurists
# 	multiply_variable = { ITA_MVSN_radar_3 = 5 }
# 	add_to_variable = { ITA_MVSN_radar_3 = 4 }
# 	subtract_from_variable = { ITA_MVSN_radar_3 = 0.5 }
# 	round_variable = ITA_MVSN_radar_3

# 	set_variable = { ITA_MVSN_radar_4 = ITA_mvsn_influence_in_NFP  } ##MVSN
# 	multiply_variable = { ITA_MVSN_radar_4 = 5 }
# 	add_to_variable = { ITA_MVSN_radar_4 = 4 }
# 	subtract_from_variable = { ITA_MVSN_radar_4 = 0.5 }
# 	round_variable = ITA_MVSN_radar_4
# }



# ITA_NFP_convert_axes_values_to_frames = {
# 	# Computes the frame values for each of the radar graph progress bars, based on these inputs

# 	set_variable = { ITA_MVSN_radar_display_0 = ITA_MVSN_radar_0 }
# 	multiply_variable = { ITA_MVSN_radar_display_0 = 10 }
# 	add_to_variable = { ITA_MVSN_radar_display_0 = ITA_MVSN_radar_1 }

# 	set_variable = { ITA_MVSN_radar_display_1 = ITA_MVSN_radar_1  }
# 	multiply_variable = { ITA_MVSN_radar_display_1 = 10 }
# 	add_to_variable = { ITA_MVSN_radar_display_1 = ITA_MVSN_radar_2 }

# 	set_variable = { ITA_MVSN_radar_display_2 = ITA_MVSN_radar_2 }
# 	multiply_variable = { ITA_MVSN_radar_display_2 = 10 }
# 	add_to_variable = { ITA_MVSN_radar_display_2 = ITA_MVSN_radar_3 }

# 	set_variable = { ITA_MVSN_radar_display_3 = ITA_MVSN_radar_3 }
# 	multiply_variable = { ITA_MVSN_radar_display_3 = 10 }
# 	add_to_variable = { ITA_MVSN_radar_display_3 = ITA_MVSN_radar_4 }

# 	set_variable = { ITA_MVSN_radar_display_4 = ITA_MVSN_radar_4 }
# 	multiply_variable = { ITA_MVSN_radar_display_4 = 10 }
# 	add_to_variable = { ITA_MVSN_radar_display_4 = ITA_MVSN_radar_0 }

# 	ITA_calc_party_stability_var = yes
# }



ITA_socialist_militia_population_setup = {
	for_each_scope_loop = {
		array = ITA.socialist_GUI_array_target_states
		
		set_variable = { num_of_militas_divisions = THIS.state_population_k }

		multiply_variable = {num_of_militas_divisions = socialist_influence}

		divide_variable = {num_of_militas_divisions = 50000}

		round_variable = num_of_militas_divisions


	}
}



ITA_mercenary_raid_effect = {
	set_variable = {
		ITA_mercenary_power_fail = ITA_mercenary_power
	}
	multiply_variable = {
		ITA_mercenary_power_fail = -1
	}
	add_to_variable = {
		ITA_mercenary_power_fail = 100
	}
	random_list = {
		var:ITA_mercenary_power = {
			country_event = ITA_mercenary_events.1
		}
		var:ITA_mercenary_power_fail = {
			country_event = ITA_mercenary_events.2
		}
	}
}