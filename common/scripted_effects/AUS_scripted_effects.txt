AUS_giovane_italia_result = {
    
}

d_clear_german_unification_flag = {
	clr_country_flag = form_germany_flag
}

###IMPerial diet
austrian_imperial_senate_initial = {
	# put simply parliament_seat_array contains seat numbers of each party and parliament_id_array contains the id of the corresponding party
	add_to_array = { global.imperial_senate_seat_array = 138 } # Party A
	add_to_array = { global.imperial_senate_seat_array = 109 } # Party B 
	add_to_array = { global.imperial_senate_seat_array = 74 } # Party C
	add_to_array = { global.imperial_senate_seat_array = 62 } # Party D
	add_to_array = { global.imperial_senate_seat_array = 29 }

	# the loop below just populates the parliament_id_array with values starting from 1 to 5
	for_loop_effect = {
		start = 1 # loop starts at v = 1 
		end = 6 # loop end when v = 6 so the last add_to_array will have a value of 5

		add_to_array = { global.imperial_senate_id_array = v } # v is a variable storing the current iteration of the root
	}

	modify_parliament_seats = yes
}

modify_parliament_seats = {
	for_each_loop = {
		array = global.imperial_senate_id_array

		set_temp_variable = { temp_id = global.imperial_senate_id_array^i } # i is the current index of the array
		set_temp_variable = { temp_index = i }
		modify_parliament_id_seats = yes
	}
}

modify_parliament_id_seats = {
	set_temp_variable = { temp_seat_count = global.imperial_senate_seat_array^temp_index } # temp seat count will be 95 for example if temp_index is 0, 15 if 1 and so on

	# what this does is essentially adding to parliament_main_array the id of a party until the number of ids in the array is the same as its number of seats 
	while_loop_effect = {
		limit = { 
			check_variable = { temp_seat_count > 0 }
		}
		add_to_array = { global.imperial_senate_main_array = temp_id }
		subtract_from_temp_variable = { temp_seat_count = 1 }
	} 
	# the global.parliament_main_array will essentially look like:
	# 1,1,1,1,1,1,1,...(repeated 95 times),2,2,2,2,2,2,2(repeated 15 times),3,3,3.. etc.
}

AUS_calc_infil_var = {
	set_variable = {prussian_infil_var_loc = prussian_infil_var}

			add_to_variable = {prussian_infil_var_loc = 100}
}

 


AUS_calc_mission_fund_var = {
	set_variable = {mission_infil_success_rate_increase_weekly = funding_for_infil_mission}
	divide_variable = {
		mission_infil_success_rate_increase_weekly = 10
	}

	set_variable = {mission_fund_cost = funding_for_infil_mission}
	divide_variable = {mission_fund_cost = -200}
}

AUS_modify_cost = {
	add_to_variable = {funding_for_infil_mission = temp_value}
	AUS_calc_mission_fund_var = yes


	# scroll position 
	set_variable = { slider_x_position = 72 }
	set_temp_variable = { temp_x = funding_for_infil_mission }
	multiply_temp_variable = { temp_x = 245 }
	divide_temp_variable = { temp_x = 100 }
	round_temp_variable = temp_x
	add_to_variable = { slider_x_position = temp_x }

	clamp_variable = {
		var = slider_x_position
		max = 317
	}
}

AUS_slider_setup = {
	set_variable = { slider_x_position = 72 }
		set_temp_variable = { temp_x = funding_for_infil_mission }
		multiply_temp_variable = { temp_x = 245 }
		divide_temp_variable = { temp_x = 100 }
		round_temp_variable = temp_x
		add_to_variable = { slider_x_position = temp_x }

		clamp_variable = {
			var = slider_x_position
			max = 317
		}
}

hungary_civil_war = {
	953 = {
		add_core_of = HUN
	}
	952 = {
		add_core_of = HUN
	}

	154 = {
		add_core_of = HUN
	}
	155 = {
		add_core_of = HUN
	}
	43 = {
		add_core_of = HUN
	}
	83 = {
		add_core_of = HUN 
	}
	76 = {
		add_core_of = HUN
	}
	84 = {
		add_core_of = HUN
	}
	82 = {
		add_core_of = HUN
	}
	764 = {
		add_core_of = HUN
	}

	664 = {
		add_core_of = HUN
	}
	73 = {
		add_core_of = HUN
	}
	71 = {
		add_core_of = HUN
	}
	70 = {
		add_core_of = HUN
	}
	45 = {
		add_core_of = HUN
	}
	109 = {
		add_core_of = HUN
	}
	823 = {
		add_core_of = HUN
	}
	812 = {
		add_core_of = HUN
	}
	809 = {
		add_core_of = HUN
	}

	release = HUN



	declare_war_on = {
		target = HUN
		type = annex_everything
	}

	GER = { country_event = hungary.170 }

	HUN = {load_oob = Hungary_Civil_War}

	

	# while_loop_effect = {
	# 	limit = {
	# 		check_variable = { num_armies > 25 }
	# 	}
	# 	random_owned_controlled_state = {
	# 		limit = {
	# 			NOT = {
	# 				any_neighbor_state ={
	# 					is_owned_by = HUN
	# 				}
	# 			}
	# 		}
	# 		delete_unit = { 
	# 			state = THIS             
	# 			disband = no
	# 		}		
	# 	}
	# }
}


AUS_transfer_all_german_minor_states_to_sgc = {
	if = {
		limit = {
			FROM = {
				tag = AUS
			}
			tag = SAX
		}
		GPU = {
			annex_country = {
				target = SAX
				transfer_troops = no
			}
		}
	}
	if = {
		limit = {
			FROM = {
				tag = AUS
			}
			tag = HAN
		}
		GPU = {
			annex_country = {
				target = HAN
				transfer_troops = no
			}
		}
	}
}


AUS_industrial_level_down = {
	add_to_variable = {industrial_stuff = 10}
		set_variable = {industrial_industrial_capacity_factory = industrial_stuff}
		divide_variable = {industrial_industrial_capacity_factory = 250}

		set_variable = {industrial_production_speed_buildings_factor = industrial_stuff}
		divide_variable = {industrial_production_speed_buildings_factor = 400}

		set_variable = {industrial_consumer_goods_factor = industrial_stuff}
		divide_variable = {industrial_consumer_goods_factor = -250}

		set_variable = {vienna_progress_bar_var = industrial_stuff}
		add_to_variable = {vienna_progress_bar_var = 100}
add_to_variable = {industrial_stuff = 10}
}




AUS_ethnic_variables_setup = {
	set_variable = {
		AUS_Bohemian_Outrage_stability_factor = -0.1
	}
	set_variable = {
		AUS_Bohemian_Outrage_political_power_factor = -0.1
	}
	set_variable = {
		AUS_Bohemian_Outrage_war_support_factor = -0.1
	}

	set_variable = {
		AUS_Nemetzi_dal_stability_factor = -0.1
	}
	set_variable = {
		AUS_Nemetzi_dal_conscription_factor = -0.1
	}

 
	set_variable = {
		AUS_Giovane_Italia_consumer_goods_factor = 0.1
	}
	set_variable = {
		AUS_Giovane_Italia_war_support_factor = -0.1
	}
	set_variable = {
		AUS_Giovane_Italia_political_power_factor = -0.15
	}
	set_variable = {
		AUS_Giovane_Italia_stability_factor = 0
	}

	
	
	set_variable = {
		AUS_Croat_Support_army_org_factor = 0.08
	
	}
	set_variable = {
		AUS_Croat_Support_conscription = 0.015
	}
	set_variable = {
		AUS_Croat_Support_political_power_gain = -0.05
	}


	set_variable = {
		AUS_Bohemian_Outrage_stability_factor_loc = AUS_Bohemian_Outrage_stability_factor
	}
	multiply_variable = {
		AUS_Bohemian_Outrage_stability_factor_loc = 100
	}
	set_variable = {
		AUS_Bohemian_Outrage_political_power_factor_loc = AUS_Bohemian_Outrage_political_power_factor
	}
	multiply_variable = {
		AUS_Bohemian_Outrage_political_power_factor_loc = 100
	}
	set_variable = {
		AUS_Bohemian_Outrage_war_support_factor_loc = AUS_Bohemian_Outrage_war_support_factor
	}
	multiply_variable = {
		AUS_Bohemian_Outrage_war_support_factor_loc = 100
	}
	
	set_variable = {
		AUS_Nemetzi_dal_stability_factor_loc = AUS_Nemetzi_dal_stability_factor
	}
	multiply_variable = {
		AUS_Nemetzi_dal_stability_factor_loc = 100
	}
	set_variable = {
		AUS_Nemetzi_dal_conscription_factor_loc = AUS_Nemetzi_dal_conscription_factor
	}
	multiply_variable = {
		AUS_Nemetzi_dal_conscription_factor_loc = 100
	}
	
	
	set_variable = {
		AUS_Giovane_Italia_consumer_goods_factor_loc = AUS_Giovane_Italia_consumer_goods_factor
	}
	multiply_variable = {
		AUS_Giovane_Italia_consumer_goods_factor_loc = 100
	}
	set_variable = {
		AUS_Giovane_Italia_war_support_factor_loc = AUS_Giovane_Italia_war_support_factor
	}
	multiply_variable = {
		AUS_Giovane_Italia_war_support_factor_loc = 100
	}
	set_variable = {
		AUS_Giovane_Italia_political_power_factor_loc = AUS_Giovane_Italia_political_power_factor
	}
	multiply_variable = {
		AUS_Giovane_Italia_political_power_factor_loc = 100
	}
	
	
	set_variable = {
		AUS_Croat_Support_stability_factor_loc = AUS_Croat_Support_stability_factor
	}
	multiply_variable = {
		AUS_Croat_Support_stability_factor_loc = 100
	}
	set_variable = {
		AUS_Croat_Support_army_org_factor_loc = AUS_Croat_Support_army_org_factor
	}
	multiply_variable = {
		AUS_Croat_Support_army_org_factor_loc = 100
	}
	set_variable = {
		AUS_Croat_Support_conscription_loc = AUS_Croat_Support_conscription
	}
	multiply_variable = {
		AUS_Croat_Support_conscription_loc = 100
	}
	set_variable = {
		AUS_Croat_Support_political_power_gain_loc = AUS_Croat_Support_political_power_gain
	}
	multiply_variable = {
		AUS_Croat_Support_political_power_gain_loc = 100
	}

}

AUS_create_pie_chart = {
	clear_array = pie_chart
	resize_array = {
		array = pie_chart
		value = 1 # 1 is value for neutrality frame, so we don't have to make a loop for it
		size = 100 # 100 pieces, each percent is one piece
	}
	set_temp_variable = { AUS_opposition_pop = AUS_imperial_diet_opposition }
	multiply_temp_variable = { AUS_opposition_pop = 100 }
	round_temp_variable = AUS_opposition_pop

	set_temp_variable = { AUS_support_pop = AUS_imperial_diet_support }
	multiply_temp_variable = { AUS_support_pop = 100 }
	round_temp_variable = AUS_support_pop 
	set_variable = { ROOT.last_idx = AUS_opposition_pop }
	add_to_temp_variable = { AUS_support_pop = ROOT.last_idx }
	for_loop_effect = {
		start = ROOT.last_idx
		end = AUS_support_pop
		set_variable = { pie_chart^v = 2 }
		add_to_variable = { ROOT.last_idx = 1 }
	}

	set_temp_variable = { democratic_pop = 0 }
	multiply_temp_variable = { democratic_pop = 100 }
	round_temp_variable = democratic_pop
	add_to_temp_variable = { democratic_pop = ROOT.last_idx }
	for_loop_effect = {
		start = ROOT.last_idx
		end = democratic_pop
		set_variable = { pie_chart^v = 3 }
		add_to_variable = { ROOT.last_idx = 1 }
	}

	set_temp_variable = { fascism_pop = 0 }
	multiply_temp_variable = { fascism_pop = 100 }
	round_temp_variable = fascism_pop 
	add_to_temp_variable = { fascism_pop = ROOT.last_idx }
	for_loop_effect = {
		start = ROOT.last_idx
		end = fascism_pop
		set_variable = { pie_chart^v = 4 }
	}

	clear_variable = ROOT.last_idx
	add_to_variable = { pie_chart_dirty = 1 }
}

d_AUS_create_pie_chart_debug = {
	AUS_create_pie_chart = yes
}