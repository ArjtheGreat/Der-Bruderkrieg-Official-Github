FRA_level_up_deregulation = {
    if = {
        limit = {
            has_idea = FRA_deregulation
        }
        swap_ideas = {
				add_idea = FRA_deregulation_2
				remove_idea = FRA_deregulation
		}
    }

    if = {
        limit = {
            has_idea = FRA_deregulation_2
        }
        swap_ideas = {
				add_idea = FRA_deregulation_3
				remove_idea = FRA_deregulation_2
		}
    }
}


FRA_peasent_revolt_effect = {
  if = {
      limit = {
        check_variable = { FRA_peasent_revolt_var > 40 }
      }
      set_variable = {
        test_var = 0
      }
      every_owned_state = {
          limit = {
              OR = {has_state_category = city has_state_category = large_city}
              #NOT = {id = 16 }
              is_on_continent = europe
          }
          FPR = {
              transfer_state = PREV
          }
          create_unit = {
            division = "name = \"Peasant Army\" division_template = \"Peasant Army\" start_experience_factor = 0.5 start_equipment_factor = 0.5"

            owner = FPR
          }
          create_unit = {
            division = "name = \"Peasant Army\" division_template = \"Peasant Army\" start_experience_factor = 0.5 start_equipment_factor = 0.5"

            owner = FPR
          }
          add_to_variable = { PREV.test_var = 1 }
      }
      declare_war_on = {
          target = FPR
          type = annex_everything
      }
  }
  else_if = {
      limit = {
          check_variable = { FRA_peasent_revolt_var > 25 }
      }
      random_owned_controlled_state = {
          limit = {
              OR = {has_state_category = city has_state_category = large_city}
              #NOT = {id = 16 }
              is_on_continent = europe
          }
          FPR = {
              transfer_state = PREV
          }
          create_unit = {
            division = "name = \"Peasant Army\" division_template = \"Peasant Army\" start_experience_factor = 0.5 start_equipment_factor = 0.5"

            owner = FPR
          }
          create_unit = {
            division = "name = \"Peasant Army\" division_template = \"Peasant Army\" start_experience_factor = 0.5 start_equipment_factor = 0.5"

            owner = FPR
          }
      }
      random_owned_controlled_state = {
          limit = {
            OR = {has_state_category = city has_state_category = large_city}
              #NOT = {id = 16 }
              is_on_continent = europe
          }
          FPR = {
              transfer_state = PREV
          }

          create_unit = {
            division = "name = \"Peasant Army\" division_template = \"Peasant Army\" start_experience_factor = 0.5 start_equipment_factor = 0.5"

            owner = FPR
          }
          create_unit = {
            division = "name = \"Peasant Army\" division_template = \"Peasant Army\" start_experience_factor = 0.5 start_equipment_factor = 0.5"

            owner = FPR
          }
      }
      declare_war_on = {
          target = FPR
          type = annex_everything
      }
 
 
  }
  else_if = {
      limit = {
          has_variable = FRA_peasent_revolt_var
      }
      set_country_flag = FRA_peasentrevolt_crushed_flag
  }
}

d_frarevolt = {
  FRA_peasent_revolt_effect = yes
}


belgian_elections_effect = {
  set_temp_variable =   {
    temp_degrelle_win_prob = global.degrelle_win_prob
  }
  subtract_from_variable = {temp_degrelle_win_prob = 100}
  multiply_variable = {temp_degrelle_win_prob = -1}

  random_list = {
			global.degrelle_win_prob =  { country_event = belgian_election_events.1 ENG = {country_event = belgian_election_events.1}}
			temp_degrelle_win_prob = { country_event = belgian_election_events.3 ENG = {country_event = belgian_election_events.3} }
		}
}

france_give_state_strikes_effect = { 
    set_state_flag = { flag = currently_being_striked value = 40 }
    hidden_effect = {
      add_dynamic_modifier = {
        modifier = french_strikes_modifier
        days = 40
      }  
    }
  
}

calc_french_strikes_vars = {

  set_variable = {french_strikes_state_production_speed_industrial_complex_factor_debuff = france_strikes_var }
  divide_variable = {french_strikes_state_production_speed_industrial_complex_factor_debuff = 500}

  set_variable = {french_strikes_conscription_debuff = france_strikes_var }
  divide_variable = {french_strikes_conscription_debuff = 250}
}

calc_french_strikes_vars_for_loc = {

  set_variable = {french_strikes_state_production_speed_industrial_complex_factor_debuff_loc = france_strikes_var_for_loc }
  divide_variable = {french_strikes_state_production_speed_industrial_complex_factor_debuff_loc = 5}

  set_variable = {french_strikes_conscription_debuff_loc = france_strikes_var_for_loc }
  divide_variable = {french_strikes_conscription_debuff_loc = 2.5}
}

update_french_strike_vars = {
  every_owned_state = {
    limit = {
      has_state_flag = currently_being_striked
    }
    set_variable = {
      france_strikes_var = global.france_strikes_ref_var
    }
    calc_french_strikes_vars = yes
  }
  set_variable = {
    france_strikes_var_for_loc = global.france_strikes_ref_var
  }
  calc_french_strikes_vars_for_loc = yes
}


update_westfalen_crackdown_vars = {
  every_owned_state = {
    limit = {
      is_in_array = {
        array = FGD.nationalist_states_array
        value = THIS
      }
    }
    add_to_variable = {
      nationalist_influence =FRA_weekly_crackdown_westfalen_var
    }
  }
}

FRA_westfalen_setup_crackdown_variable = {

  set_variable = {westfalen_suppression_var_loc_showcase =westfalen_suppression_var}
  divide_variable = {westfalen_suppression_var_loc_showcase = 10}
  set_variable = {manpower_loss_westfalen_crackdown_var = westfalen_suppression_var} 
  divide_variable = {manpower_loss_westfalen_crackdown_var = -1000}
  set_variable = {command_power_loss_westfalen_crackdown_var = westfalen_suppression_var}
  divide_variable = {command_power_loss_westfalen_crackdown_var = -500}

  set_variable = {FRA_weekly_crackdown_westfalen_var = westfalen_suppression_var}
  divide_variable = {FRA_weekly_crackdown_westfalen_var = -100}

  

}

FRA_modify_westfalen_suppression = {
  add_to_variable = {westfalen_suppression_var = temp_value}
  FRA_westfalen_setup_crackdown_variable = yes


  # scroll position 
  set_variable = { slider_x_position = 72 }
  set_temp_variable = { temp_x = westfalen_suppression_var }
  multiply_temp_variable = { temp_x = 245 }
  divide_temp_variable = { temp_x = 100 }
  round_temp_variable = temp_x
  add_to_variable = { slider_x_position = temp_x }

  clamp_variable = {
      var = slider_x_position
      max = 317
  }
}